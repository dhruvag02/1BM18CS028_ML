# -*- coding: utf-8 -*-
"""Lab4_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-QHPDukBNDG1ziUPftscBYGH_VSsfj7i
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn import metrics

df = pd.read_csv("datasetabalone.csv")
feature_col_names = ['Length','Diameter','Height','Whole weight','Shucked weight','Viscera weight','Shell weight']
predicted_class_names = ['Rings']

X = df[feature_col_names].values 
y = df[predicted_class_names].values

print(df.head)
xtrain,xtest,ytrain,ytest=train_test_split(X,y,test_size=0.33)

print ('\n the total number of Training Data :',ytrain.shape)
print ('\n the total number of Test Data :',ytest.shape)

clf = GaussianNB().fit(xtrain,ytrain.ravel())
predicted = clf.predict(xtest)
predictTestData= clf.predict([[0.455,0.365,0.095,0.514,0.2245,0.101,0.15]])

print('\n Confusion matrix')
print(metrics.confusion_matrix(ytest,predicted))

print('\n Accuracy of the classifier is',metrics.accuracy_score(ytest,predicted))

#print('\n The value of Precision', average_precision_score(ytest, predicted)

#print('\n The value of Recall', metrics.recall_score(ytest,predicted))

print("Predicted Value for individual Test Data:", predictTestData)